# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: eventing.knative.dev/v1alpha1
kind: ClusterChannelProvisioner
metadata:
  name: rabbitmq
spec: {}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-channel-controller
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rabbitmq-channel-controller
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - channels
      - channels/status
      - clusterchannelprovisioners
      - clusterchannelprovisioners/status
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
    verbs:
      - create
      - update
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
    verbs:
      - get
      - list
      - watch
      - create
      - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-channel-controller
  namespace: knative-eventing
subjects:
  - kind: ServiceAccount
    name: rabbitmq-channel-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: rabbitmq-channel-controller
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-channel-controller-config
  namespace: knative-eventing
data:
  # AMQP URL's for the provisioner. Replace this with the URL's of your AMQP cluster.
  amqp_url: amqp://guest:guest@localhost:5672/

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-channel-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: rabbitmq
      role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: rabbitmq-channel-controller
      containers:
        - name: controller
          image: github.com/knative/eventing/contrib/rabbitmq/pkg/controller/cmd
          volumeMounts:
            - name: rabbitmq-channel-controller-config
              mountPath: /etc/config-provisioner
      volumes:
        - name: rabbitmq-channel-controller-config
          configMap:
            name: rabbitmq-channel-controller-config

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-channel-dispatcher
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rabbitmq-channel-dispatcher
  namespace: knative-eventing
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - channels
      - channels/status
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-channel-dispatcher
  namespace: knative-eventing
subjects:
  - kind: ServiceAccount
    name: rabbitmq-channel-dispatcher
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: rabbitmq-channel-dispatcher
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-channel-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: rabbitmq
      role: dispatcher
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels: *labels
    spec:
      serviceAccountName: rabbitmq-channel-dispatcher
      containers:
        - name: dispatcher
          image: github.com/knative/eventing/contrib/rabbitmq/pkg/dispatcher/cmd
          env:
            - name: DISPATCHER_CONFIGMAP_NAME
              value: rabbitmq-channel-dispatcher
            - name: DISPATCHER_CONFIGMAP_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: rabbitmq-channel-controller-config
              mountPath: /etc/config-provisioner
      volumes:
        - name: rabbitmq-channel-controller-config
          configMap:
            name: rabbitmq-channel-controller-config

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-dispatcher
  namespace: knative-eventing
spec:
  type: ClusterIP
  selector:
    clusterChannelProvisioner: rabbitmq
    role: dispatcher
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
